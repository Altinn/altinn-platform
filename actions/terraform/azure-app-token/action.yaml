name: "Azure App Token Setup"
description: "Logs in to Azure and retrieves a app access token."
inputs:
  arm_client_id:
    required: true
    description: Federated Azure Client ID.
  arm_tenant_id:
    description: Azure Tenant ID
    default: cd0026d8-283b-4a55-9bfa-d0ef4a8ba21c
  app_resource_id:
    description: Azure App Resource ID
    required: true

runs:
  using: "composite"
  steps:
    - name: Azure login
      uses: azure/login@a457da9ea143d694b1b9c7c869ebb04ebe844ef5 # v2
      with:
        client-id: ${{ inputs.arm_client_id }}
        tenant-id: ${{ inputs.arm_tenant_id }}
        allow-no-subscriptions: true

    - name: Get Azure Access Token
      shell: bash
      env:
        APP_RESOURCE_ID: ${{ inputs.app_resource_id }}
      run: |
        # Validate UUID format
        if [[ ! "$APP_RESOURCE_ID" =~ ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$ ]]; then
          echo "Invalid app_resource_id format. Must be a UUID." >&2
          exit 1
        fi

        # Get access token
        token=$(az account get-access-token --resource "$APP_RESOURCE_ID" --query accessToken -o tsv)
        if [ -z "$token" ]; then
          echo "Failed to retrieve Enterprise app access token" >&2
          exit 1
        fi

        # Mask token
        echo "::add-mask::$token"

        # Export to environment safely
        {
          echo "TF_VAR_app_access_token<<EOF"
          echo "$token"
          echo "EOF"
        } >> "$GITHUB_ENV"
