name: Deploy Annotation to Grafana (Manual Trigger)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'prod'
      version:
        description: 'Application version'
        required: true
      owner:
        description: 'Owner or team name'
        required: true
        default: 'platform'


permissions:
  id-token: write
  contents: write
#   pull-requests: read
  deployments: write

jobs:
  deploy-annotation:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: 'Azure login'
        uses: azure/login@v2
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}



      - name: Create Grafana API Key
        id: create_grafana_key
        run: |
          az grafana api-key create --key keyname --name ${{ secrets.GRAFANA_NAME }} \
            --resource-group "${{ secrets.AZURE_RESOURCE_GROUP }}" --role editor \
            --time-to-live 1m --output json > grafana_key.json
          key=$(jq -r '.key' grafana_key.json)
          echo "::add-mask::$key"
          echo "grafana_api_key=$key" >> "$GITHUB_OUTPUT"

      - name: Create Grafana Annotation
        run: |
          timestamp=$(date +%s000)
          curl -X POST "${{ secrets.GRAFANA_URL }}/api/annotations" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer $GRAFANA_API_KEY" \
            -d "{
              \"text\": \"Deployed ${{ github.event.repository.name }} version ${{ github.event.inputs.version }}\",
              \"tags\": [
                \"deployment\",
                \"${{ github.event.inputs.environment }}\",
                \"${{ github.event.inputs.owner }}\"
              ],
              \"time\": ${timestamp},
              \"panelId\": 0,
              \"dashboardId\": 0
            }"
        env:
          GRAFANA_API_KEY: ${{ steps.create_grafana_key.outputs.grafana_api_key }}
